{{ config(
    sort = "_airbyte_emitted_at",
    unique_key = '_airbyte_ab_id',
    schema = "_airbyte_public",
    tags = [ "top-level-intermediate" ]
) }}
-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type
-- depends_on: {{ ref('collections_ab1') }}
select
    cast(metadata as {{ dbt_utils.type_string() }}) as metadata,
    cast(new_royalties as {{ dbt_utils.type_string() }}) as new_royalties,
    cast(floor_sell_source_id_int as {{ dbt_utils.type_bigint() }}) as floor_sell_source_id_int,
    cast(non_flagged_floor_sell_id as {{ dbt_utils.type_string() }}) as non_flagged_floor_sell_id,
    cast(token_id_range as {{ dbt_utils.type_string() }}) as token_id_range,
    cast(normalized_floor_sell_value as {{ dbt_utils.type_bigint() }}) as normalized_floor_sell_value,
    cast(top_buy_maker as {{ dbt_utils.type_string() }}) as top_buy_maker,
    cast(normalized_floor_sell_source_id_int as {{ dbt_utils.type_bigint() }}) as normalized_floor_sell_source_id_int,
    cast(token_set_id as {{ dbt_utils.type_string() }}) as token_set_id,
    cast(all_time_volume as {{ dbt_utils.type_bigint() }}) as all_time_volume,
    cast({{ empty_string_to_null('last_metadata_sync') }} as {{ type_timestamp_with_timezone() }}) as last_metadata_sync,
    cast(day30_volume as {{ dbt_utils.type_bigint() }}) as day30_volume,
    cast(day1_volume_change as {{ dbt_utils.type_float() }}) as day1_volume_change,
    cast(id as {{ dbt_utils.type_string() }}) as id,
    cast(slug as {{ dbt_utils.type_string() }}) as slug,
    cast(top_buy_source_id_int as {{ dbt_utils.type_bigint() }}) as top_buy_source_id_int,
    {{ cast_to_boolean('index_metadata') }} as index_metadata,
    cast(floor_sell_maker as {{ dbt_utils.type_string() }}) as floor_sell_maker,
    cast(non_flagged_floor_sell_value as {{ dbt_utils.type_bigint() }}) as non_flagged_floor_sell_value,
    cast(day7_volume_change as {{ dbt_utils.type_float() }}) as day7_volume_change,
    cast(contract as {{ dbt_utils.type_string() }}) as contract,
    cast(community as {{ dbt_utils.type_string() }}) as community,
    cast(non_flagged_floor_sell_valid_between as {{ dbt_utils.type_string() }}) as non_flagged_floor_sell_valid_between,
    cast(normalized_floor_sell_id as {{ dbt_utils.type_string() }}) as normalized_floor_sell_id,
    cast(day1_volume as {{ dbt_utils.type_bigint() }}) as day1_volume,
    cast(name as {{ dbt_utils.type_string() }}) as name,
    cast(marketplace_fees as {{ dbt_utils.type_string() }}) as marketplace_fees,
    cast(all_time_rank as {{ dbt_utils.type_bigint() }}) as all_time_rank,
    cast(day7_volume as {{ dbt_utils.type_bigint() }}) as day7_volume,
    cast({{ empty_string_to_null('created_at') }} as {{ type_timestamp_with_timezone() }}) as created_at,
    cast(_ab_cdc_deleted_at as {{ dbt_utils.type_string() }}) as _ab_cdc_deleted_at,
    cast(floor_sell_source_id as {{ dbt_utils.type_string() }}) as floor_sell_source_id,
    cast(non_flagged_floor_sell_maker as {{ dbt_utils.type_string() }}) as non_flagged_floor_sell_maker,
    cast(token_count as {{ dbt_utils.type_bigint() }}) as token_count,
    cast(day30_floor_sell_value as {{ dbt_utils.type_bigint() }}) as day30_floor_sell_value,
    cast({{ empty_string_to_null('updated_at') }} as {{ type_timestamp_with_timezone() }}) as updated_at,
    cast(top_buy_id as {{ dbt_utils.type_string() }}) as top_buy_id,
    cast(owner_count as {{ dbt_utils.type_bigint() }}) as owner_count,
    cast(day1_floor_sell_value as {{ dbt_utils.type_bigint() }}) as day1_floor_sell_value,
    cast(non_flagged_floor_sell_source_id_int as {{ dbt_utils.type_bigint() }}) as non_flagged_floor_sell_source_id_int,
    cast(floor_sell_value as {{ dbt_utils.type_bigint() }}) as floor_sell_value,
    cast(floor_sell_valid_between as {{ dbt_utils.type_string() }}) as floor_sell_valid_between,
    cast(creator as {{ dbt_utils.type_string() }}) as creator,
    cast(minted_timestamp as {{ dbt_utils.type_bigint() }}) as minted_timestamp,
    cast(top_buy_value as {{ dbt_utils.type_bigint() }}) as top_buy_value,
    cast(non_flagged_token_set_id as {{ dbt_utils.type_string() }}) as non_flagged_token_set_id,
    cast(_ab_cdc_lsn as {{ dbt_utils.type_float() }}) as _ab_cdc_lsn,
    cast(normalized_floor_sell_maker as {{ dbt_utils.type_string() }}) as normalized_floor_sell_maker,
    cast(royalties_bps as {{ dbt_utils.type_bigint() }}) as royalties_bps,
    cast(payment_tokens as {{ dbt_utils.type_string() }}) as payment_tokens,
    cast(top_buy_valid_between as {{ dbt_utils.type_string() }}) as top_buy_valid_between,
    cast(floor_sell_id as {{ dbt_utils.type_string() }}) as floor_sell_id,
    cast(day30_rank as {{ dbt_utils.type_bigint() }}) as day30_rank,
    cast(royalties as {{ dbt_utils.type_string() }}) as royalties,
    cast(day30_volume_change as {{ dbt_utils.type_float() }}) as day30_volume_change,
    cast(_ab_cdc_updated_at as {{ dbt_utils.type_string() }}) as _ab_cdc_updated_at,
    cast(day7_rank as {{ dbt_utils.type_bigint() }}) as day7_rank,
    cast(day1_rank as {{ dbt_utils.type_bigint() }}) as day1_rank,
    cast(day7_floor_sell_value as {{ dbt_utils.type_bigint() }}) as day7_floor_sell_value,
    cast(normalized_floor_sell_valid_between as {{ dbt_utils.type_string() }}) as normalized_floor_sell_valid_between,
    _airbyte_ab_id,
    _airbyte_emitted_at,
    {{ current_timestamp() }} as _airbyte_normalized_at
from {{ ref('collections_ab1') }}
-- collections
where 1 = 1
{{ incremental_clause('_airbyte_emitted_at', this) }}

