{{ config(
    sort = ["_airbyte_unique_key", "_airbyte_emitted_at"],
    unique_key = "_airbyte_unique_key",
    schema = "public",
    tags = [ "top-level" ]
) }}
-- Final base SQL model
-- depends_on: {{ ref('collections_scd') }}
select
    _airbyte_unique_key,
    metadata,
    new_royalties,
    floor_sell_source_id_int,
    non_flagged_floor_sell_id,
    token_id_range,
    normalized_floor_sell_value,
    top_buy_maker,
    normalized_floor_sell_source_id_int,
    token_set_id,
    all_time_volume,
    last_metadata_sync,
    day30_volume,
    day1_volume_change,
    id,
    slug,
    top_buy_source_id_int,
    index_metadata,
    floor_sell_maker,
    non_flagged_floor_sell_value,
    day7_volume_change,
    contract,
    community,
    non_flagged_floor_sell_valid_between,
    normalized_floor_sell_id,
    day1_volume,
    name,
    marketplace_fees,
    all_time_rank,
    day7_volume,
    created_at,
    _ab_cdc_deleted_at,
    floor_sell_source_id,
    non_flagged_floor_sell_maker,
    token_count,
    day30_floor_sell_value,
    updated_at,
    top_buy_id,
    owner_count,
    day1_floor_sell_value,
    non_flagged_floor_sell_source_id_int,
    floor_sell_value,
    floor_sell_valid_between,
    creator,
    minted_timestamp,
    top_buy_value,
    non_flagged_token_set_id,
    _ab_cdc_lsn,
    normalized_floor_sell_maker,
    royalties_bps,
    payment_tokens,
    top_buy_valid_between,
    floor_sell_id,
    day30_rank,
    royalties,
    day30_volume_change,
    _ab_cdc_updated_at,
    day7_rank,
    day1_rank,
    day7_floor_sell_value,
    normalized_floor_sell_valid_between,
    _airbyte_ab_id,
    _airbyte_emitted_at,
    {{ current_timestamp() }} as _airbyte_normalized_at,
    _airbyte_collections_hashid
from {{ ref('collections_scd') }}
-- collections from {{ source('public', '_airbyte_raw_collections') }}
where 1 = 1
and _airbyte_active_row = 1
{{ incremental_clause('_airbyte_emitted_at', this) }}

